[package]
name = "sysbadge"
version = "0.1.0"
edition = "2021"
license = "gpl3"
authors = [ "Finn Behrens <me@kloenk.dev>" ]

[lib]
name = "sysbadge"
# crate-type = [ "lib", "cdylib", "staticlib" ]


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = [ ]
simulator = [ ]
invert = [ ]
downloaders = [ "alloc" ]
downloader = [ "downloader-pk", "downloader-pronouns" ]
downloader-pk = [ "downloaders", "dep:pkrs", "dep:reqwest" ]
downloader-pronouns = [ "downloaders", "serde", "dep:reqwest" ]
wasm = [ "dep:wasm-bindgen" ]
defmt = [ "dep:defmt" ]
file = [ "alloc", "dep:bitflags", "dep:sha2", "serde", "dep:serde_json" ]
alloc = [ "defmt?/alloc", "capnp/alloc", "serde_json?/alloc" ]
clap = [ "dep:clap" ]
serde = [ "dep:serde", "int-enum/serde" ]
std = [ "alloc", "int-enum/std", "sha2?/std", "serde_json?/std", "dep:libc" ]
tracing = [ "dep:tracing" ]

[dependencies]
defmt = { version = "0.3", features = [ ], optional = true }
tracing = { version = "0.1", optional = true }

nb = "1.1"
fugit = "0.3"
crc16 = "0.4.0"

paste = "1.0"
int-enum = { version = "0.5", default-features = false, features = [ "convert" ] }

# Display
embedded-graphics = "0.8"
uc8151 = { version = "0.2" }
profont = "0.7.0"

# updater
pkrs = { version = "0.3", optional = true }
reqwest = { version = "0.11", optional = true, default-features = false, features = [ "rustls-tls" ] }
clap = { version = "4", optional = true }

serde = { version = "1.0", features = [ "derive" ],  optional = true }
serde_json = { version = "1", default-features = false, optional = true }

wasm-bindgen = { version = "=0.2.87", optional = true }

capnp = { version = "0.18", default-features = false, features= [ ] }

bitflags = { version = "2.4", optional = true }
sha2 = { version = "0.10", default-features = false, optional = true }
libc = { version = "0.2", optional = true }
[build-dependencies]
capnpc = "0.18"

[workspace]
members = [
    "./fw",
    "./simulator",
    "./web",
    "./usb",
    "./cli"
]

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = true
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = true
opt-level = 0
overflow-checks = true

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3

[patch.crates-io]
embedded-graphics-web-simulator = { git = "https://github.com/georgik/embedded-graphics-web-simulator.git", rev = "6faa2cc69fcbb2b9b17ae1f765107a499dd4f8b8" }

# Embassy
# embassy-rp = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }
embassy-nrf = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }

embassy-executor = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }
embassy-futures = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }
embassy-sync = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }
embassy-time = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }
embassy-macros = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }

embassy-usb = { git = "https://github.com/embassy-rs/embassy.git", rev = "debda2f52c320904755d89ef9c19fa6e54734fe8" }

# embassy-nrf = { path = "../embassy/embassy-nrf" }
# embassy-executor = { path = "../embassy/embassy-executor" }
# embassy-futures = { path = "../embassy/embassy-futures" }
# embassy-sync = { path = "../embassy/embassy-sync" }
# embassy-time = { path = "../embassy/embassy-time" }
# embassy-macros = { path = "../embassy/embassy-macros" }
# 
# embassy-usb = { path = "../embassy/embassy-usb" }

nrf-softdevice = { git = "https://github.com/embassy-rs/nrf-softdevice" }
nrf-softdevice-s113 = { git = "https://github.com/embassy-rs/nrf-softdevice" }
# nrf-softdevice = { path = "../nrf-softdevice/nrf-softdevice" }
# nrf-softdevice-s113 = { path = "../nrf-softdevice/nrf-softdevice-s113" }
# nrf-softdevice-s140 = { git = "https://github.com/embassy-rs/nrf-softdevice" }
